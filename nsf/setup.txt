source init_env.sh
export DATAROOT=/atlas/u/kechoi/datasets/

source /afs/cs.stanford.edu/u/kechoi/.bashrc.user

(ref: https://github
.com/hmdolatabadi/LRS_NF/blob/975bbdb501192476aa75ad72f9c91fe8ea889d1b/experiments/images_data.py)


CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with experiments/image_configs/cifar-10-8bit.json


CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with \
experiments/image_configs/mnist-8bit.json

(this got killed, resume. but doesn't seem like you'll need to finish)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with \
experiments/image_configs/mnist-8bit.json

(re-run with 8 steps per layer)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with \
experiments/image_configs/mnist-8bit.json


# how would you evaluate this?
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py eval_on_test with \
experiments/image_configs/mnist-8bit-old.json \
flow_checkpoint='/atlas/u/kechoi/time-score-dre/nsf/runs/images/mnist-8-bit-1/flow_best.pt'

CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py eval_on_test with \
experiments/image_configs/mnist-8bit.json \
flow_checkpoint='/atlas/u/kechoi/time-score-dre/nsf/runs/images/mnist-8-bit-3/flow_best.pt'


(can you train with TRE preprocessing? results are too good atm)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with \
experiments/image_configs/mnist-8bit-tre.json

(8/20/21): I SEE, you are supposed to turn multi_scale to False for MNIST :/
(a) normal glow preprocessing: mnist-8-bit-4
THIS DIED! relaunched as mnist-8-bit-8
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with \
experiments/image_configs/mnist-8bit.json

(b) RealNVP preprocessing: mnist-8-bit-6
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with \
experiments/image_configs/mnist-8bit-tre.json

(c) TRE preprocessing (RealNVP + mean shift rip)


# evaluation (glow preprocessing)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py eval_on_test with \
experiments/image_configs/mnist-8bit.json \
flow_checkpoint='/atlas/u/kechoi/time-score-dre/nsf/runs/images/mnist-8-bit-8/flow_best.pt'

(tre-preprocessing)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py eval_on_test with \
experiments/image_configs/mnist-8bit-tre.json \
flow_checkpoint='/atlas/u/kechoi/time-score-dre/nsf/runs/images/mnist-8-bit-6/flow_best.pt'

# NOTE: moved everything BEFORE this (no mean centering) to the
no_mean_centering directory! (mnist-8bit-5)
(8/22/21) now try preprocessing with mean-centering
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering.py with \
experiments/image_configs/mnist-8bit-true-tre.json


(looking at TRE code, might be that lr=5e-4 with weight_decay=1e-6)
"mnist-8-bit-6"
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering.py with \
experiments/image_configs/mnist-8bit-optim.json

(actually, lr=1e-4)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering.py with \
experiments/image_configs/mnist-8bit-optim.json



----
(8/23/21)
(mnist-8-bit-10)
this is 1178292 params
actually....seems like there is no resnet
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering.py with \
experiments/image_configs/mnist-8bit-optim.json

mnist-8bit-noresnet2.json (dropout=0.1 in spline)
mnist-8-bit-11
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering.py eval_on_test \
with experiments/image_configs/mnist-8bit-noresnet2.json
----> 1.18 bpd

mnist-8bit-noresnet.json (dropout=0.0 in spline)
mnist-8-bit-12
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering.py eval_on_test \
with experiments/image_configs/mnist-8bit-noresnet.json
----> 1.16 bpd

mnist-8bit-noresnet3.json (dropout=0.1 in spline, lr=1e-4)
mnist-8-bit-13

mnist-8bit-noresnet4.json (dropout=0.0 in spline, lr=1e-4)
mnist-8-bit-14

#########  new convnet? #####
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering.py \
with experiments/image_configs/mnist-8bit-noresnet.json



##############################
can i just try it on the modified arch without mean-centering?
(1182180 params)
mnist-8-bit-22
1.1007 on test set
CUDA_VISIBLE_DEVICES=1 python3 experiments/images.py eval_on_test \
with experiments/image_configs/mnist-8bit-noresnet.json

(on slurm as mnist-8-bit-23)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images.py with \
experiments/image_configs/mnist-8bit-noresnet.json


###############################
(8/24/21)
just do the usual, no mean-centering: (mnist-8-bit): 1.119
(mnist-8-bit-1)
1178292 trainable parameters here

CUDA_VISIBLE_DEVICES=1 python3 experiments/images.py eval_on_test \
with experiments/image_configs/mnist-8bit-noresnet.json

(mnist-8-bit-1)
Test log probability (bits/dim): -1.1203 +/- 0.0001
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_early_stop.py eval_on_test \
with experiments/image_configs/mnist-8bit-noresnet.json




#############################
(8/25/21): Train Copula
mnit-8-bit
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py \
with experiments/image_configs/mnist-8bit-copula.json

(mnist-8-bit-3, where lr=1e-4)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py \
with experiments/image_configs/mnist-8bit-copula.json

(mnist-8-bit-2, where lr=5e-4)
(this died at 15K)
CUDA_VISIBLE_DEVICES=1 python3 experiments/images_centering_copula.py \
with experiments/image_configs/mnist-8bit-copula2.json

----> (try testing this config?)
    CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/mnist-8bit-copula2.json
    (eval)
    Test log probability (bits/dim): -1.46
(relaunched on slurm: mnist-8-bit-4: THIS IS THE ONE WE LIKE!)

(slurm: mnit-8-bit-5, this was lr=1e-4)
    CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/mnist-8bit-copula.json
    -1.49 with smaller learning rate


#######
ok. so now our new goal is to try to get this bpd down. what to do?
(mnist-8bit-6)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py \
with experiments/image_configs/mnist-8bit-copula3.json

    CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/mnist-8bit-copula3.json
Test log probability (bits/dim): -1.4523

(lr=1e-4, no weight decay). mnit-8bit-7
CUDA_VISIBLE_DEVICES=1 python3 experiments/images_centering_copula.py \
with experiments/image_configs/mnist-8bit-copula2.json

CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/mnist-8bit-copula2.json



###############################
(8/25/21): Train noise: Test log probability (bits/dim): -2.01
# NOTE: there is no actual training going on here! we directly fit the flow via
np.cov
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_noise.py eval_on_test \
with experiments/image_configs/mnist-8bit-noise.json
(YAS)

###############################
(8/28/2021): train with slurm


################################
(train copula)
mnist-8bit-8
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py \
with experiments/image_configs/mnist-copula-recent.json

----> (try testing this config?)
    CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/mnist-copula-recent.json
    Test log probability (bits/dim):
(relaunched on slurm: mnist-8-bit-4: THIS IS THE ONE WE LIKE!)

(slurm: mnit-8-bit-5, this was lr=1e-4)
    CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/mnist-8bit-copula.json
    -1.49 with smaller learning rate


###############
(try evaluating the newly trained copulas): this is the best one
# saved in: mnist-8-bit-10
(you get this number if you set the seed to 7777 and load from test_data_means
.p. Otherwise you get ~1.4471)
    CUDA_VISIBLE_DEVICES=1 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/copula/0.json
    Test log probability (bits/dim): -1.4462

1: -1.4506
2: -1.4471
3: -1.4563
4: -1.4550
5: -1.4547

# 9/16/21: gonna try this again
(this was previously: //  "flow_checkpoint":
"/atlas/u/kechoi/time-score-dre/nsf/runs/images/mnist-8-bit-10/flow_best.pt")

(this is now re-running with diff initializations at mnist-8-bit-15)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py \
    with experiments/image_configs/copula/0.json

# testing cholesky
CUDA_VISIBLE_DEVICES=1 python3 experiments/images_centering_copula.py \
    with experiments/image_configs/copula/0.json


CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
    with experiments/image_configs/copula/0.json


CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula.py eval_on_test \
with experiments/image_configs/copula/1.json

CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula_test.py \
with experiments/image_configs/copula/2.json

# why are we doing so poorly on test?
(34 is the most recent, bs=512)
CUDA_VISIBLE_DEVICES=0 python3 experiments/images_centering_copula_test.py \
    with experiments/image_configs/copula/0a.json